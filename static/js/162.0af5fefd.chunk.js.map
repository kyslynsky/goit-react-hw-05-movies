{"version":3,"file":"static/js/162.0af5fefd.chunk.js","mappings":"8JAEaA,E,QAAOC,GAAAA,EAAH,+C,SCEJC,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OACE,SAAC,IAAD,WACE,SAACH,EAAD,UAAOG,KAGZ,C,kJCRYC,EAAcH,EAAAA,GAAAA,GAAH,uFAMXI,EAAaJ,EAAAA,GAAAA,GAAH,+EAMVK,EAAaL,EAAAA,GAAAA,EAAH,2C,SCUvB,EApBqB,WACnB,MCD6B,WAC7B,IAAMM,GAAOC,EAAAA,EAAAA,MAAPD,GACN,GAA8BE,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAAC,GACgB,IAAhBA,EAAKC,OAKTP,EAAWM,GAJTJ,EAAS,4BAKZ,IACAM,OAAM,SAAAP,GACLC,EAASD,EAAMT,QAChB,GACJ,GAAE,CAACI,IAEG,CAACG,EAASE,EAClB,CDpB0BQ,GAAzB,eAAOV,EAAP,KAAgBE,EAAhB,KAEA,OACE,+BACGA,IAAS,SAACS,EAAA,EAAD,CAAYlB,QAASS,KAC/B,SAACR,EAAD,iBACGM,QADH,IACGA,OADH,EACGA,EAASY,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACZ,UAACnB,EAAD,YACE,sCACU,0BAAOkB,QAEjB,SAACjB,EAAD,UAAakB,MAJEjB,EADL,QAWrB,C,4MEpBOkB,EAAsBC,mCACxBC,EAAU,+BAGHC,EAAiB,mCAAG,WAAMC,GAAN,uFACRC,IAAAA,IAAA,gBACnBH,EADmB,wCACoBF,EADpB,iBAC8CI,IAFtC,cACzBE,EADyB,yBAIxBA,EAASd,KAAKe,SAJU,2CAAH,sDAOjBC,EAAqB,mCAAG,WAAOC,EAAOL,GAAd,uFACZC,IAAAA,IAAA,gBACnBH,EADmB,iCACaF,EADb,iCACuDS,EADvD,iBACqEL,EADrE,yBADY,cAC7BE,EAD6B,yBAI5BA,EAASd,KAAKe,SAJc,2CAAH,wDAOrBG,EAAe,mCAAG,WAAMC,GAAN,uFACNN,IAAAA,IAAA,gBACnBH,EADmB,kBACFS,EADE,oBACiBX,EADjB,oBADM,cACvBM,EADuB,yBAItBA,EAASd,MAJa,2CAAH,sDAOfoB,EAAe,mCAAG,WAAMD,GAAN,uFACNN,IAAAA,IAAA,gBACnBH,EADmB,kBACFS,EADE,4BACyBX,EADzB,oBADM,cACvBM,EADuB,yBAItBA,EAASd,KAAKqB,MAJQ,2CAAH,sDAOfvB,EAAe,mCAAG,WAAMqB,GAAN,uFACNN,IAAAA,IAAA,gBACnBH,EADmB,kBACFS,EADE,4BACyBX,EADzB,2BADM,cACvBM,EADuB,yBAItBA,EAASd,KAAKe,SAJQ,2CAAH,qD","sources":["components/Error/Error.styled.js","components/Error/Error.jsx","components/MovieReviews/MovieReviews.styled.js","components/MovieReviews/MovieReviews.jsx","hooks/useFetchReviews.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.p`\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from 'components/GlobalStyles';\nimport { Text } from './Error.styled';\n\nexport const ErrorBlock = ({ message }) => {\n  return (\n    <Container>\n      <Text>{message}</Text>\n    </Container>\n  );\n};\n\nErrorBlock.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nexport const ReviewItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ReviewText = styled.p`\n  color: #c1c1c1;\n`;\n","import { useFetchReviews } from 'hooks/useFetchReviews';\nimport { ErrorBlock } from 'components/Error/Error';\nimport { ReviewsList, ReviewItem, ReviewText } from './MovieReviews.styled';\n\nconst MovieReviews = () => {\n  const [reviews, error] = useFetchReviews();\n\n  return (\n    <section>\n      {error && <ErrorBlock message={error} />}\n      <ReviewsList>\n        {reviews?.map(({ id, author, content }) => (\n          <ReviewItem key={id}>\n            <h3>\n              Author: <span>{author}</span>\n            </h3>\n            <ReviewText>{content}</ReviewText>\n          </ReviewItem>\n        ))}\n      </ReviewsList>\n    </section>\n  );\n};\n\nexport default MovieReviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/movies-api';\n\nexport const useFetchReviews = () => {\n  let { id } = useParams();\n  const [reviews, setReviews] = useState();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(id)\n      .then(data => {\n        if (data.length === 0) {\n          setError('Currently doesn`t got one');\n          return;\n        }\n\n        setReviews(data);\n      })\n      .catch(error => {\n        setError(error.message);\n      });\n  }, [id]);\n\n  return [reviews, error];\n};\n","import axios from 'axios';\n\nconst { REACT_APP_API_KEY } = process.env;\nconst baseUrl = 'https://api.themoviedb.org/3';\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3'; not working\n\nexport const getTrendingMovies = async page => {\n  const response = await axios.get(`\n    ${baseUrl}/trending/movie/week?api_key=${REACT_APP_API_KEY}&page=${page}`);\n\n  return response.data.results;\n};\n\nexport const getMovieBySearchQuery = async (query, page) => {\n  const response = await axios.get(`\n    ${baseUrl}/search/movie?api_key=${REACT_APP_API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`\n    ${baseUrl}/movie/${movieId}?api_key=${REACT_APP_API_KEY}&language=en-US`);\n\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(`\n    ${baseUrl}/movie/${movieId}/credits?api_key=${REACT_APP_API_KEY}&language=en-US`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`\n    ${baseUrl}/movie/${movieId}/reviews?api_key=${REACT_APP_API_KEY}&language=en-US&page=1`);\n\n  return response.data.results;\n};\n"],"names":["Text","styled","ErrorBlock","message","ReviewsList","ReviewItem","ReviewText","id","useParams","useState","reviews","setReviews","error","setError","useEffect","getMovieReviews","then","data","length","catch","useFetchReviews","Error","map","author","content","REACT_APP_API_KEY","process","baseUrl","getTrendingMovies","page","axios","response","results","getMovieBySearchQuery","query","getMovieDetails","movieId","getMovieCredits","cast"],"sourceRoot":""}