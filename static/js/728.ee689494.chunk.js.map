{"version":3,"file":"static/js/728.ee689494.chunk.js","mappings":"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","sources":["components/Error/Error.styled.js","components/Error/Error.jsx","components/MoviesListItem/MoviesListItem.styled.js","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/SearchPage.jsx","hooks/useFetchByQuery.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.p`\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from 'components/GlobalStyles';\nimport { Text } from './Error.styled';\n\nexport const ErrorBlock = ({ message }) => {\n  return (\n    <Container>\n      <Text>{message}</Text>\n    </Container>\n  );\n};\n\nErrorBlock.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieItem = styled.li`\n  /* box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px,\n    rgba(9, 30, 66, 0.08) 0px 0px 0px 1px; */\n  box-shadow: 0 4px 3px -4px lightblue;\n  border-radius: 4px;\n  transition: all 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    scale: 1.02;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #fff;\n  font-size: 1rem;\n  transition: all 0.2s ease-in-out;\n\n  ${MovieItem}:hover &,\n  ${MovieItem}:focus & {\n    color: #d9514eff;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  padding: 14px;\n  font-weight: 500;\n`;\n\nexport const MoviePoster = styled.img`\n  border-radius: 4px 4px 0 0;\n  object-fit: cover;\n  height: 60vh;\n\n  @media screen and (min-width: 425px) {\n    height: 80vh;\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 70vh;\n  }\n\n  @media screen and (min-width: 1024px) {\n    height: 65vh;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 60vh;\n  }\n\n  @media screen and (min-width: 2000px) {\n    height: 25vh;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport pic from 'img/no-poster.jpg';\nimport {\n  MovieItem,\n  MovieLink,\n  MovieTitle,\n  MoviePoster,\n} from './MoviesListItem.styled';\n\nconst MoviesListItem = ({ id, title, poster }) => {\n  const location = useLocation();\n\n  return (\n    <MovieItem>\n      <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n        <div>\n          <MoviePoster\n            src={poster ? `https://image.tmdb.org/t/p/w500${poster}` : pic}\n            alt={title}\n          />\n        </div>\n        <MovieTitle>{title ? title : 'No title here'}</MovieTitle>\n      </MovieLink>\n    </MovieItem>\n  );\n};\n\nexport default MoviesListItem;\n\nMoviesListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  grid-gap: 16px;\n  margin-top: 40px;\n  padding-bottom: 24px;\n`;\n","import PropTypes from 'prop-types';\nimport MoviesListItem from 'components/MoviesListItem';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ data }) => {\n  return (\n    <List>\n      {data.map(({ id, original_title, poster_path }) => {\n        return (\n          <MoviesListItem\n            key={id}\n            id={id}\n            title={original_title}\n            poster={poster_path}\n          />\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport { SiThemoviedatabase } from 'react-icons/si';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 50vw;\n  margin: 0 auto;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n\n  @media screen and (max-width: 767px) {\n    max-width: 100%;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 1rem;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const SearchBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 48px;\n  background-color: #2da8d8ff;\n  outline: none;\n  border: none;\n  color: white;\n  font-size: 1.2rem;\n  font-weight: 500;\n  transition: all 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #d9514eff;\n  }\n`;\n\nexport const BtnIco = styled(SiThemoviedatabase)`\n  width: 26px;\n  height: 26px;\n  margin-left: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { BtnIco, SearchForm, Input, SearchBtn } from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query === '') {\n      Notify.warning('Enter the search query please', {\n        clickToClose: true,\n      });\n      return;\n    }\n    onSubmit(query.trim());\n    setQuery('');\n  };\n\n  return (\n      <SearchForm onSubmit={handleSubmit}>\n        <Input\n          value={query}\n          onChange={handleInputChange}\n          autoFocus\n          type=\"text\"\n          placeholder=\"Want to find something?\"\n        />\n        <SearchBtn type=\"submit\">\n          Seacrh\n          <BtnIco />\n        </SearchBtn>\n      </SearchForm>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { SearchBox } from 'components/SearchBox';\nimport MoviesList from 'components/MoviesList';\nimport { useFetchByQuery } from 'hooks/useFetchByQuery';\nimport { ErrorBlock } from 'components/Error/Error';\nimport { Container } from 'components/GlobalStyles';\n\nconst SearchPage = () => {\n  const [movies, error, setSearchParams] = useFetchByQuery();\n\n  const handleSearchMovie = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Container>\n      <main>\n        {error && <ErrorBlock message={error} />}\n        <SearchBox onSubmit={handleSearchMovie} />\n        {movies.length > 0 && <MoviesList data={movies} />}\n      </main>\n    </Container>\n  );\n};\n\nexport default SearchPage;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieBySearchQuery } from 'services/movies-api';\nimport { Notify } from 'notiflix';\n\nexport const useFetchByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(null);\n\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n\n    getMovieBySearchQuery(searchQuery)\n      .then(data => {\n        if (data.length === 0) {\n          Notify.warning('Sorry! No results mathing your request', {\n            clickToClose: true,\n          });\n          setMovies([]);\n          return;\n        }\n\n        setMovies(data);\n      })\n      .catch(error => {\n        Notify.failure(error.message, {\n          clickToClose: true,\n        });\n        setError(error.message);\n      });\n  }, [searchQuery]);\n\n  return [movies, error, setSearchParams];\n};\n","import axios from 'axios';\n\nconst { REACT_APP_API_KEY } = process.env;\nconst baseUrl = 'https://api.themoviedb.org/3';\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3'; not working\n\nexport const getTrendingMovies = async page => {\n  const response = await axios.get(`\n    ${baseUrl}/trending/movie/week?api_key=${REACT_APP_API_KEY}&page=${page}`);\n\n  return response.data.results;\n};\n\nexport const getMovieBySearchQuery = async (query, page) => {\n  const response = await axios.get(`\n    ${baseUrl}/search/movie?api_key=${REACT_APP_API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`);\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`\n    ${baseUrl}/movie/${movieId}?api_key=${REACT_APP_API_KEY}&language=en-US`);\n\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(`\n    ${baseUrl}/movie/${movieId}/credits?api_key=${REACT_APP_API_KEY}&language=en-US`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`\n    ${baseUrl}/movie/${movieId}/reviews?api_key=${REACT_APP_API_KEY}&language=en-US&page=1`);\n\n  return response.data.results;\n};\n"],"names":["Text","styled","ErrorBlock","message","MovieItem","MovieLink","Link","MovieTitle","MoviePoster","id","title","poster","location","useLocation","to","state","from","src","pic","alt","List","data","map","original_title","poster_path","SearchForm","Input","SearchBtn","BtnIco","SiThemoviedatabase","SearchBox","onSubmit","useState","query","setQuery","e","preventDefault","trim","Notify","clickToClose","value","onChange","currentTarget","toLowerCase","autoFocus","type","placeholder","movies","setMovies","useSearchParams","searchParams","setSearchParams","error","setError","searchQuery","get","useEffect","getMovieBySearchQuery","then","length","catch","useFetchByQuery","Error","MoviesList","REACT_APP_API_KEY","process","baseUrl","getTrendingMovies","page","axios","response","results","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}